<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:a="http://xmlns.jcp.org/jsf/passthrough"
      xmlns:c="http://java.sun.com/jsp/jstl/core"
      xmlns:ui="http://java.sun.com/jsf/facelets"
>
<h:body>
    <ui:composition template="/template/commonLayout.xhtml">
        <ui:define name="header">
            <h1>Edit Event</h1>
        </ui:define>
        <ui:define name="content">
            <h:form id="formId">
                <h:panelGrid columns="2">

                    <h:outputText value="Name: " style="font-weight:bold"/>
                    <h:inputText value="#{editEventBean.eventEntity.name}" a:placeholder="Event name"/>

                    <h:outputLabel value="Date: " style="font-weight:bold"/>
                    <h:inputText value="#{editEventBean.pageDate}" a:placeholder="dd.mm.yyyy"/>

                    <h:outputLabel value="Time: " style="font-weight:bold"/>
                    <h:inputText value="#{editEventBean.pageTime}" a:placeholder="hh:mm"/>

                    <h:outputLabel value="Description: " style="font-weight:bold"/>
                    <h:inputText value="#{editEventBean.eventEntity.description}"/>

                    <h:outputLabel value="Price: " style="font-weight:bold"/>
                    <h:inputText value="#{editEventBean.eventEntity.price}" size="5">
                        <f:convertNumber pattern="0.00"/>
                    </h:inputText>

                    <input id="basics"/>

                    <h:inputHidden id="profileId" value="#{editEventBean.profileId}"/>
                    <h:inputHidden id="profileFullname" value="#{editEventBean.fullname}"/>
                </h:panelGrid>

                <h:commandButton id="hdnBtn" action="#{editEventBean.doAThing}" style="display: none;"/>

                <c:forEach var="invited" items="#{editEventBean.invited}">
                    <h:outputText value="#{invited.firstname}"/>
                    <h:outputText value=" "/>
                    <h:outputText value="#{invited.lastname}"/>
                    <br/>
                </c:forEach>

                <c:forEach var="guest" items="#{editEventBean.eventEntity.invited}">
                    <h:outputText value="#{guest.user.firstname}"/>
                    <h:outputText value=" "/>
                    <h:outputText value="#{guest.user.lastname}"/>
                    <h:outputText value=" "/>
                    <h:outputText value="#{guest.status.type}"/>
                    <br/>
                </c:forEach>

                <input id="pac-input" class="controls" type="text" placeholder="Search Box"/>
                <div id="map"/>
                <h:commandButton value="Save" onclick="getVars()" action="#{editEventBean.submit}"/>
                <h:commandButton value="Delete Event"
                                 action="#{editEventBean.deleteEvent}"/>

                <h:inputHidden id="lat" value="#{editEventBean.eventEntity.latitude}"/>
                <h:inputHidden id="lng" value="#{editEventBean.eventEntity.longitude}"/>
                <h:inputHidden id="eventID" value="#{editEventBean.eventEntity.id}"/>
            </h:form>
            <h:outputScript>
                var marker = null;

                function myMap() {
                var myLatLng = {lat: #{editEventBean.eventEntity.latitude}, lng: #{editEventBean.eventEntity.longitude}};
                var myCenter = new google.maps.LatLng(myLatLng);
                var mapCanvas = document.getElementById("map");
                var mapOptions = {
                center: myCenter,
                disableDefaultUI: true,
                zoom: 13,
                mapTypeId: google.maps.MapTypeId.ROADMAP
                };
                var map = new google.maps.Map(mapCanvas, mapOptions);

                marker = new google.maps.Marker({
                position: myLatLng,
                animation: google.maps.Animation.DROP,
                map: map
                });

                google.maps.event.addListener(map, 'click', function (event) {
                placeMarker(map, event.latLng);
                });

                // Create the search box and link it to the UI element.
                var input = document.getElementById('pac-input');
                var searchBox = new google.maps.places.SearchBox(input);
                map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

                // Bias the SearchBox results towards current map's viewport.
                map.addListener('bounds_changed', function () {
                searchBox.setBounds(map.getBounds());
                });


                searchBox.addListener('places_changed', function () {
                var places = searchBox.getPlaces();

                if (places.length === 0) {
                return;
                }

                // For each place, get the icon, name and location.
                var bounds = new google.maps.LatLngBounds();
                places.forEach(function (place) {
                if (!place.geometry) {
                console.log("Returned place contains no geometry");
                return;
                }


                marker.setPosition(place.geometry.location);

                getVars(marker.getPosition());

                if (place.geometry.viewport) {
                // Only geocodes have viewport.
                bounds.union(place.geometry.viewport);
                } else {
                bounds.extend(place.geometry.location);
                }
                });
                map.fitBounds(bounds);
                });
                }

                function placeMarker(map, location) {

                marker.setPosition(location);

                getVars(marker.getPosition());
                }

                function getVars(locationInfo) {
                document.getElementById("formId:lng").value = locationInfo.lng().toFixed(6);
                document.getElementById("formId:lat").value = locationInfo.lat().toFixed(6);
                }
            </h:outputScript>
            <h:outputScript>
                var options = {
                data: [

                <c:forEach var="person" items="#{editEventBean.profiles}">
                    {
                    "id": #{person.id},
                    "name": "#{person.firstname.concat(" ").concat(person.lastname)}",
                    "username": "#{person.username}"
                    },
                </c:forEach>],

                getValue: "name",

                template: {
                type: "description",
                fields: {
                description: "username"
                }
                },

                list: {
                match: {
                enabled: true
                },

                sort: {
                enabled: true
                },

                showAnimation: {
                type: "fade",
                time: 400,
                callback: function () {
                }
                },

                hideAnimation: {
                type: "slide",
                time: 400,
                callback: function () {
                }
                },
                onChooseEvent: function () {
                var search = $("#basics").getSelectedItemData();
                document.getElementById("formId:profileId").value = search.id;
                document.getElementById("formId:profileFullname").value = search.name;
                document.getElementById("formId:hdnBtn").click();
                }
                },

                placeholder: "Search User",
                theme: "round"

                };

                $("#basics").easyAutocomplete(options);
            </h:outputScript>

            <script type="text/javascript"
                    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCVG5bffPnxRZkGFq9x7rpMl9PHEFCpAQs&amp;libraries=places&amp;callback=myMap"/>
        </ui:define>
    </ui:composition>

</h:body>
</html>